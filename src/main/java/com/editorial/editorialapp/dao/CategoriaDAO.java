package com.editorial.editorialapp.dao;

// Importamos la clase Categoria para poder construir objetos desde los resultados de la base de datos.
import com.editorial.editorialapp.beans.Categoria;
import java.sql.*;
import java.util.*;

// Esta clase gestiona todas las operaciones de base de datos relacionadas con la entidad Categoria.
// Se encarga de listar, insertar, actualizar y eliminar categor√≠as desde la tabla "categoria".
public class CategoriaDAO {

    // M√©todo para obtener todas las categor√≠as registradas en la base de datos.
    public List<Categoria> listar() {
        List<Categoria> lista = new ArrayList<>();
        String sql = "SELECT * FROM categoria";

        // Se establece la conexi√≥n y se ejecuta la consulta.
        try (Connection con = Conexion.getConnection();
             Statement st = con.createStatement();
             ResultSet rs = st.executeQuery(sql)) {

            // Se recorre el resultado y se construyen objetos Categoria con los datos obtenidos.
            while (rs.next()) {
                Categoria c = new Categoria();
                c.setId(rs.getInt("id"));
                c.setNombre(rs.getString("nombre"));
                lista.add(c); // Se agrega cada categor√≠a a la lista final.
            }

        } catch (Exception e) {
            // En caso de error, se imprime el stack trace para facilitar el diagn√≥stico.
            e.printStackTrace();
        }

        // Se devuelve la lista completa de categor√≠as.
        return lista;
    }

    // M√©todo para insertar una nueva categor√≠a en la base de datos.
    public void insertar(Categoria c) {
        String sql = "INSERT INTO categoria(nombre) VALUES(?)";

        try (Connection con = Conexion.getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {

            // Mensaje de seguimiento para verificar qu√© categor√≠a se est√° insertando.
            System.out.println("üü° Ejecutando INSERT con nombre = " + c.getNombre());

            ps.setString(1, c.getNombre());
            int filas = ps.executeUpdate(); // Se ejecuta la inserci√≥n.

            // Confirmaci√≥n visual en consola seg√∫n el resultado.
            if (filas > 0) {
                System.out.println("‚úÖ Categor√≠a insertada correctamente.");
            } else {
                System.out.println("‚ö†Ô∏è No se insert√≥ ninguna fila.");
            }

        } catch (Exception e) {
            System.out.println("‚ùå Error al insertar categor√≠a: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // M√©todo para actualizar los datos de una categor√≠a existente.
    public void actualizar(Categoria c) {
        String sql = "UPDATE categoria SET nombre=? WHERE id=?";

        try (Connection con = Conexion.getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, c.getNombre());
            ps.setInt(2, c.getId());
            ps.executeUpdate(); // Se ejecuta la actualizaci√≥n.

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // M√©todo para eliminar una categor√≠a seg√∫n su ID.
    public void eliminar(int id) {
        String sql = "DELETE FROM categoria WHERE id=?";

        try (Connection con = Conexion.getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setInt(1, id);
            ps.executeUpdate(); // Se ejecuta la eliminaci√≥n.

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // M√©todo para obtener una categor√≠a espec√≠fica seg√∫n su ID.
    public Categoria obtenerPorId(int id) {
        String sql = "SELECT * FROM categoria WHERE id=?";

        try (Connection con = Conexion.getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setInt(1, id); // Se asigna el ID al par√°metro de la consulta.
            ResultSet rs = ps.executeQuery();

            // Si se encuentra la categor√≠a, se construye el objeto con sus datos.
            if (rs.next()) {
                Categoria c = new Categoria();
                c.setId(rs.getInt("id"));
                c.setNombre(rs.getString("nombre"));
                return c;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        // Si no se encuentra la categor√≠a, se devuelve null.
        return null;
    }
}